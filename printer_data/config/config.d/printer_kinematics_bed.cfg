#####################################################################
# 	Z Stepper Settings
#####################################################################
[stepper_z]
step_pin: MOT2_STEP
dir_pin: !MOT2_DIR
enable_pin: !MOT2_EN
rotation_distance: 4
microsteps: 64
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_max: 250
position_min: -5
homing_speed: 15
second_homing_speed: 3
homing_retract_dist: 0
homing_positive_dir: false

[stepper_z1]
step_pin: MOT3_STEP
dir_pin: !MOT3_DIR
enable_pin: !MOT3_EN
rotation_distance: 4
microsteps: 64


[stepper_z2]
step_pin: MOT4_STEP
dir_pin: !MOT4_DIR
enable_pin: !MOT4_EN
rotation_distance: 4
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: MOT2_CS
interpolate: false
run_current: 0.7
stealthchop_threshold: 0
sense_resistor: 0.110

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: MOT3_CS
interpolate: false
run_current: 0.7
stealthchop_threshold: 0
sense_resistor: 0.110

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: MOT4_CS
interpolate: false
run_current: 0.7
stealthchop_threshold: 0
sense_resistor: 0.110

#[safe_z_home]
#home_xy_position: 125, 125
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
#speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
#z_hop: 10
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
#z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
#move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.

#[safe_z_home]
#home_xy_position: 147, 256
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
# home_xy_position:-10,-10
#speed: 100
#z_hop: 10

# [homing_override]
# set_position_z: 0
# axes: z
# gcode:
#     ; G90   ; Uncomment these 2 lines to blindly lift the Z 2mm at start
#     ; G1 Z2 F600
#     G28 X0 Y0
#     G1 X125 Y125 F3600
#     G28 Z5

#####################################################################
# 	Z Tilt Settings
#####################################################################
[z_tilt_ng]
z_positions:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
    -50, 18
    125, 298
    300, 18

points:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
    30, 35
    125, 195
    220, 35

speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.

horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.

retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.

retry_tolerance: 0.0075
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

extra_points:
    30, 195
    220, 195
    125, 35
#   A list in the same format as "points" above. This list contains
#   additional points to be probed during the two calibration commands
#   Z_TILT_CALIBRATE and Z_TILT_AUTODETECT. If the bed is not perfectly
#   level, it is possible to specify more probing points with "points".
#   In that Z_TILT_ADJUST will determine the best fit via a least squares
#   algorithm. As this comes with additional overhead on each Z_TILT_ADJUST
#   run, it is instead possible to move the additional probing points here,
#   and use Z_TILT_CALIBRATE to find z_offsets to use for the probing points
#   used in Z_TILT_ADJUST.
#   The extra points are also used during T_ZILT_AUTODETECT. This command
#   can determine the z_positions automatically by during several probings
#   with intentionally tilted bed. It is currently only implemented for 3
#   z steppers.
#   Note that for both commands to work numpy has to be installed.
#averaging_len: 3
#   Z_TILT_CALIBRATE and Z_TILT_AUTODETECT both run repeatedly until the
#   result can no longer be improved. To determine this, the probed values
#   are averaged. The number of runs to average over is configured with this
#   parameter.
#autodetect_delta: 1.0
#   The amount by which Z_TILT_AUTODETECT intentionally tilts the bed. Higher
#   values yield better results, but can also lead to situations where the
#   bed is tilted in a way that the nozzle touched the bed before the probe.
#   The default is conservative.

#[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
##	Gantry Corners for 300mm Build
##	Uncomment for 300mm build
#gantry_corners:
#	-60,-10
#	360,370
##	Probe points
#points:
#	50,25
#	50,225
#	250,225
#	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
#gantry_corners:
#	-60,-10
#	410,420
##	Probe points
#points:
#	50,25
#	50,275
#	300,275
#	300,25

#--------------------------------------------------------------------
#speed: 100
#horizontal_move_z: 10
#retries: 5
#retry_tolerance: 0.0075
#max_adjust: 10